-- Databases and Tables Required for the Assignment
--mysql -u root -p

CREATE DATABASE assignment;
USE assignment;

--SELECT user, host FROM mysql.user;
CREATE USER 'appuser'@'localhost' IDENTIFIED BY 'apppass';
GRANT ALL ON assignment.* TO 'appuser'@'localhost';

CREATE USER 'appuser'@'127.0.0.1' IDENTIFIED BY 'apppass';
GRANT ALL ON assignment.* TO 'appuser'@'127.0.0.1';

--You will need to have a users table as follows:

CREATE TABLE users (
  user_id INTEGER NOT NULL AUTO_INCREMENT,
  name VARCHAR(128),
  email VARCHAR(128),
  password VARCHAR(128),
  PRIMARY KEY(user_id)
) ENGINE = InnoDB DEFAULT CHARSET=utf8;

ALTER TABLE users ADD INDEX(email);
ALTER TABLE users ADD INDEX(password);
--DESCRIBE users;

--Once you create the users table above, you will need to insert a user record into the "users" table using this SQL:

INSERT INTO users (name,email,password)
  VALUES ('UMSI','umsi@umich.edu','1a52e17fa899cf40fb04cfc42e6352f1');

--The above password is the salted MD5 hash of 'php123' using a salt of 'XyZzy12*_'. 
--You will need this user in the database to pass the assignment. You can add other users to the database if you like.

--You will also need to add a profiles table as follows:

CREATE TABLE profiles (
  profile_id INTEGER NOT NULL AUTO_INCREMENT,
  user_id INTEGER NOT NULL,
  first_name TEXT,
  last_name TEXT,
  email TEXT,
  headline TEXT,
  summary TEXT,
  PRIMARY KEY(profile_id),
  CONSTRAINT profile_ibfk_2
  FOREIGN KEY (user_id)
  REFERENCES users (user_id)
  ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
--DESCRIBE profiles;

--This table has a foreign key to the users table.

--This assignment will add one more table to the database from the previous assignment. 
--We will create a Position table and connect it to the profiles table with a many-to-one relationship.

CREATE TABLE positions (
  position_id INTEGER NOT NULL AUTO_INCREMENT,
  profile_id INTEGER NOT NULL,
  rank INTEGER,
  year INTEGER,
  description TEXT,
  PRIMARY KEY(position_id),
  CONSTRAINT position_ibfk_1
    FOREIGN KEY (profile_id)
    REFERENCES profiles (profile_id)
    ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
--DESCRIBE positions;

--There is no logical key for this table.

--The rank column should be used to record the order in which the positions 
--are to be displayed. Do not use the year as the sort key when viewing the data.

--This assignment will add one more table to the database from the previous assignment.
--We will create educations and Institution tables and connect them to the profiles table.

CREATE TABLE institutions (
  institution_id INTEGER NOT NULL KEY AUTO_INCREMENT,
  name VARCHAR(255),
  UNIQUE(name)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
--DESCRIBE institutions;

CREATE TABLE educations (
  profile_id INTEGER,
  institution_id INTEGER,
  rank INTEGER,
  year INTEGER,
  CONSTRAINT education_ibfk_1
    FOREIGN KEY (profile_id)
    REFERENCES profiles (profile_id)
    ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT education_ibfk_2
    FOREIGN KEY (institution_id)
    REFERENCES institutions (institution_id)
    ON DELETE CASCADE ON UPDATE CASCADE,
  PRIMARY KEY(profile_id, institution_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
--DESCRIBE educations;

--You must create the institutions table first so that the CONSTRAINTS in the educations table work properly.

--Like in the positions table, the rank column should be used to record the order in which 
--the positions are to be displayed. Do not use the year as the sort key when viewing the data.

--You should also pre-insert some University data into the institutions table as follows:

INSERT INTO institutions (name) VALUES ('University of Michigan');
INSERT INTO institutions (name) VALUES ('University of Virginia');
INSERT INTO institutions (name) VALUES ('University of Oxford');
INSERT INTO institutions (name) VALUES ('University of Cambridge');
INSERT INTO institutions (name) VALUES ('Stanford University');
INSERT INTO institutions (name) VALUES ('Duke University');
INSERT INTO institutions (name) VALUES ('Michigan State University');
INSERT INTO institutions (name) VALUES ('Mississippi State University');
INSERT INTO institutions (name) VALUES ('Montana State University');

--This will allow you to have some university names pop up when you are typing ahead in the School field.

--CLEANUP CODE
DROP DATABASE IF EXISTS assignment;
DROP USER IF EXISTS 'appuser'@'localhost';
DROP USER IF EXISTS 'appuser'@'127.0.0.1';
--